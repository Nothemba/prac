{"ast":null,"code":"var _jsxFileName = \"/home/recruit/Documents/prodTest/attendance/src/Attendance.js\";\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// const columns = [\n//   { id: 'name', label: 'Name', minWidth: 20,align:'center' },\n//   { id: 'Monday', label: 'Monday', minWidth: 20, align:'right' },\n//   {\n//     id: 'Tuesday',\n//     label: 'Tuesday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toLocaleString(),\n//   },\n//   {\n//     id: 'Wednsday',\n//     label: 'Wednsday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toLocaleString(),\n//   },\n//   {\n//     id: 'Thursday',\n//     label: 'Thursday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toFixed(2),\n//   },\n//   {\n//     id: 'Friday',\n//     label: 'Friday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toFixed(2),\n//   }\n// ];\n// function createData(name, Monday, Tuesday, Wednsday,Thursday, Friday) {\n//   // const density = population / size;\n//   return { name, Monday, Tuesday,Wednsday, Thursday, Friday };\n// }\n// const rows = [\n//   createData('recruit 1', '1', '1', '1','1', 0.75),\n//   createData('recruit 2', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 3', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 4', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 5', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 6', '0.75', '1', '0', '0.5',0.25),\n//   createData('recruit 7', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 8', '1', '1', '0.75', '1',0.25)\n// ];\n// const useStyles = makeStyles({\n//   root: {\n//     width: '100%',\n//   },\n//   tableWrapper: {\n//     maxHeight: 440,\n//     overflow: 'auto',\n//   },\n// });\n// export default function StickyHeadTable() {\n//   const classes = useStyles();\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = event => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n//   return (\n//     <Paper className={classes.root}>\n//       <div className={classes.tableWrapper}>\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map(column => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align}\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n//               return (\n//                 <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n//                   {columns.map(column => {\n//                     const value = row[column.id];\n//                     return (\n//                       <TableCell key={column.id} align={column.align}>\n//                         {column.format && typeof value === 'number' ? column.format(value) : value}\n//                       </TableCell>\n//                     );\n//                   })}\n//                 </TableRow>\n//               );\n//             })}\n//           </TableBody>\n//         </Table>\n//       </div>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={rows.length}\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         backIconButtonProps={{\n//           'aria-label': 'previous page',\n//         }}\n//         nextIconButtonProps={{\n//           'aria-label': 'next page',\n//         }}\n//         onChangePage={handleChangePage}\n//         onChangeRowsPerPage={handleChangeRowsPerPage}\n//       />\n//     </Paper>\n//   );\n// }\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { makeData, Logo, Tips } from \"./Utils\"; // Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: makeData()\n    };\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: data,\n      columns: [{\n        Header: \"Name\",\n        columns: [{\n          getProps: (state, rowInfo) => {\n            if (rowInfo && rowInfo.row) {\n              return {\n                style: {\n                  background: rowInfo.row.firstName === \"able\" ? \"red\" : null\n                }\n              };\n            } else {\n              return {};\n            }\n          },\n          Header: \"First Name\",\n          accessor: \"firstName\"\n        }, {\n          Header: \"Last Name\",\n          id: \"lastName\",\n          accessor: d => d.lastName\n        }]\n      }, {\n        Header: \"Info\",\n        columns: [{\n          Header: \"Age\",\n          accessor: \"age\"\n        }, {\n          Header: \"Status\",\n          accessor: \"status\"\n        }]\n      }, {\n        Header: \"Stats\",\n        columns: [{\n          Header: \"Visits\",\n          accessor: \"visits\"\n        }]\n      }],\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Tips, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 224\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/recruit/Documents/prodTest/attendance/src/Attendance.js"],"names":["React","render","makeData","Logo","Tips","ReactTable","App","Component","constructor","state","data","Header","columns","getProps","rowInfo","row","style","background","firstName","accessor","id","d","lastName","document","getElementById"],"mappingskB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,SAArC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAER,QAAQ;AADH,KAAb;AAGD;;AACDD,EAAAA,MAAM,GAAG;AAAA,UACCS,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,OAAR,KAAoB;AAC5B,gBAAIA,OAAO,IAAIA,OAAO,CAACC,GAAvB,EAA4B;AAC1B,qBAAO;AACLC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,UAAU,EACRH,OAAO,CAACC,GAAR,CAAYG,SAAZ,KAA0B,MAA1B,GAAmC,KAAnC,GAA2C;AAFxC;AADF,eAAP;AAMD,aAPD,MAOO;AACL,qBAAO,EAAP;AACD;AACF,WAZH;AAaEP,UAAAA,MAAM,EAAE,YAbV;AAcEQ,UAAAA,QAAQ,EAAE;AAdZ,SADO,EAiBP;AACER,UAAAA,MAAM,EAAE,WADV;AAEES,UAAAA,EAAE,EAAE,UAFN;AAGED,UAAAA,QAAQ,EAAEE,CAAC,IAAIA,CAAC,CAACC;AAHnB,SAjBO;AAFX,OADO,EA2BP;AACEX,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE,CACP;AACED,UAAAA,MAAM,EAAE,KADV;AAEEQ,UAAAA,QAAQ,EAAE;AAFZ,SADO,EAKP;AACER,UAAAA,MAAM,EAAE,QADV;AAEEQ,UAAAA,QAAQ,EAAE;AAFZ,SALO;AAFX,OA3BO,EAwCP;AACER,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,OAAO,EAAE,CACP;AACED,UAAAA,MAAM,EAAE,QADV;AAEEQ,UAAAA,QAAQ,EAAE;AAFZ,SADO;AAFX,OAxCO,CAFX;AAoDE,MAAA,eAAe,EAAE,EApDnB;AAqDE,MAAA,SAAS,EAAC,qBArDZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAwDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDF,EAyDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,EA0DE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,CADF;AA8DD;;AAvE+B;;AA0ElClB,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n\n\n// const columns = [\n//   { id: 'name', label: 'Name', minWidth: 20,align:'center' },\n//   { id: 'Monday', label: 'Monday', minWidth: 20, align:'right' },\n//   {\n//     id: 'Tuesday',\n//     label: 'Tuesday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toLocaleString(),\n//   },\n//   {\n//     id: 'Wednsday',\n//     label: 'Wednsday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toLocaleString(),\n//   },\n//   {\n//     id: 'Thursday',\n//     label: 'Thursday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toFixed(2),\n//   },\n//   {\n//     id: 'Friday',\n//     label: 'Friday',\n//     minWidth: 30,\n//     align: 'right',\n//     // format: value => value.toFixed(2),\n//   }\n// ];\n\n// function createData(name, Monday, Tuesday, Wednsday,Thursday, Friday) {\n//   // const density = population / size;\n//   return { name, Monday, Tuesday,Wednsday, Thursday, Friday };\n// }\n\n// const rows = [\n//   createData('recruit 1', '1', '1', '1','1', 0.75),\n//   createData('recruit 2', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 3', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 4', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 5', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 6', '0.75', '1', '0', '0.5',0.25),\n//   createData('recruit 7', '0.75', '1', '0', '1',0.25),\n//   createData('recruit 8', '1', '1', '0.75', '1',0.25)\n  \n// ];\n\n// const useStyles = makeStyles({\n//   root: {\n//     width: '100%',\n//   },\n//   tableWrapper: {\n//     maxHeight: 440,\n//     overflow: 'auto',\n//   },\n// });\n\n// export default function StickyHeadTable() {\n//   const classes = useStyles();\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = event => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n\n//   return (\n//     <Paper className={classes.root}>\n     \n//       <div className={classes.tableWrapper}>\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map(column => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align}\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n//               return (\n//                 <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n//                   {columns.map(column => {\n//                     const value = row[column.id];\n//                     return (\n//                       <TableCell key={column.id} align={column.align}>\n//                         {column.format && typeof value === 'number' ? column.format(value) : value}\n//                       </TableCell>\n//                     );\n//                   })}\n//                 </TableRow>\n//               );\n//             })}\n//           </TableBody>\n//         </Table>\n//       </div>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={rows.length}\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         backIconButtonProps={{\n//           'aria-label': 'previous page',\n//         }}\n//         nextIconButtonProps={{\n//           'aria-label': 'next page',\n//         }}\n//         onChangePage={handleChangePage}\n//         onChangeRowsPerPage={handleChangeRowsPerPage}\n//       />\n      \n//     </Paper>\n//   );\n// }\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { makeData, Logo, Tips } from \"./Utils\";\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: makeData()\n    };\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n        <ReactTable\n          data={data}\n          columns={[\n            {\n              Header: \"Name\",\n              columns: [\n                {\n                  getProps: (state, rowInfo) => {\n                    if (rowInfo && rowInfo.row) {\n                      return {\n                        style: {\n                          background:\n                            rowInfo.row.firstName === \"able\" ? \"red\" : null\n                        }\n                      };\n                    } else {\n                      return {};\n                    }\n                  },\n                  Header: \"First Name\",\n                  accessor: \"firstName\"\n                },\n                {\n                  Header: \"Last Name\",\n                  id: \"lastName\",\n                  accessor: d => d.lastName\n                }\n              ]\n            },\n            {\n              Header: \"Info\",\n              columns: [\n                {\n                  Header: \"Age\",\n                  accessor: \"age\"\n                },\n                {\n                  Header: \"Status\",\n                  accessor: \"status\"\n                }\n              ]\n            },\n            {\n              Header: \"Stats\",\n              columns: [\n                {\n                  Header: \"Visits\",\n                  accessor: \"visits\"\n                }\n              ]\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n        <br />\n        <Tips />\n        <Logo />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}