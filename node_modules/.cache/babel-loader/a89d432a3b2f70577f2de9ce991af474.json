{"ast":null,"code":"import _defineProperty from \"/home/recruit/Documents/prodTest/attendance/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/recruit/Documents/prodTest/attendance/src/Colours.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     marginTop: theme.spacing(3),\n//     width: '50%',\n//     overflowX: 'auto',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 200,\n//   },\n// }));\n// function createData(name, colours, points) {\n//   return { name, colours, points};\n// }\n// const rows = [\n//   createData('on time', \"green\", 1),\n//   createData('late with notice', 'Yellow', 0.75),\n//   createData('late without notice', 'orange', 0.25),\n//   createData('absent with notice', 'orange', 0.25),\n//   createData('absent without notice', 'orange', 0),\n//   createData('sick leave','orange' ,0.25),\n//   createData('absent with leave', 'purple', 0.5),\n// ];\n// export default function DenseTable() {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.root}>\n//       <h2>colour codes</h2>\n//       <Paper className={classes.paper}>\n//         <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Attendance</TableCell>\n//               <TableCell align=\"right\">Colours</TableCell>\n//               <TableCell align=\"right\">Points&nbsp;(g)</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.map(row => (\n//               <TableRow key={row.name}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {row.name}\n//                 </TableCell>\n//                 <TableCell align=\"right\">{row.colours}</TableCell>\n//                 <TableCell align=\"right\">{row.points}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </Paper>\n//     </div>\n//   );\n// }\nimport React from \"react\";\nimport namor from \"namor\";\nimport \"./index.css\";\n\nconst range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst newPerson = () => {\n  const statusChance = Math.random();\n  return {\n    firstName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    lastName: namor.generate({\n      words: 1,\n      numbers: 0\n    }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status: statusChance > 0.66 ? \"relationship\" : statusChance > 0.33 ? \"complicated\" : \"single\"\n  };\n};\n\nexport function makeData(len = 5553) {\n  return range(len).map(d => {\n    return _objectSpread({}, newPerson(), {\n      children: range(10).map(newPerson)\n    });\n  });\n}\nexport const Logo = () => React.createElement(\"div\", {\n  style: {\n    margin: '1rem auto',\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"For more examples, visit \", '', React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}), React.createElement(\"a\", {\n  href: \"https://github.com/react-tools/react-table\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: \"https://github.com/react-tools/media/raw/master/logo-react-table.png\",\n  style: {\n    width: \"150px\",\n    margin: \".5em auto .3em\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n})));\nexport const Tips = () => React.createElement(\"div\", {\n  style: {\n    textAlign: \"center\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, \"Tip: Hold shift when sorting to multi-sort!\"));\nexpo;","map":{"version":3,"sources":["/home/recruit/Documents/prodTest/attendance/src/Colours.js"],"names":["React","namor","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","generate","words","numbers","lastName","age","floor","visits","progress","status","makeData","map","d","children","Logo","margin","display","flexWrap","alignItems","justifyContent","width","Tips","textAlign","expo"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     marginTop: theme.spacing(3),\n//     width: '50%',\n//     overflowX: 'auto',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 200,\n//   },\n// }));\n\n// function createData(name, colours, points) {\n//   return { name, colours, points};\n// }\n\n// const rows = [\n//   createData('on time', \"green\", 1),\n//   createData('late with notice', 'Yellow', 0.75),\n//   createData('late without notice', 'orange', 0.25),\n//   createData('absent with notice', 'orange', 0.25),\n//   createData('absent without notice', 'orange', 0),\n//   createData('sick leave','orange' ,0.25),\n//   createData('absent with leave', 'purple', 0.5),\n \n// ];\n\n// export default function DenseTable() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       <h2>colour codes</h2>\n//       <Paper className={classes.paper}>\n//         <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Attendance</TableCell>\n//               <TableCell align=\"right\">Colours</TableCell>\n//               <TableCell align=\"right\">Points&nbsp;(g)</TableCell>\n          \n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.map(row => (\n//               <TableRow key={row.name}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {row.name}\n//                 </TableCell>\n//                 <TableCell align=\"right\">{row.colours}</TableCell>\n//                 <TableCell align=\"right\">{row.points}</TableCell>\n                \n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </Paper>\n      \n//     </div>\n//   );\n// }\nimport React from \"react\";\nimport namor from \"namor\";\nimport \"./index.css\";\n\nconst range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst newPerson = () => {\n  const statusChance = Math.random();\n  return {\n    firstName: namor.generate({ words: 1, numbers: 0 }),\n    lastName: namor.generate({ words: 1, numbers: 0 }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? \"relationship\"\n        : statusChance > 0.33 ? \"complicated\" : \"single\"\n  };\n};\n\nexport function makeData(len = 5553) {\n  return range(len).map(d => {\n    return {\n      ...newPerson(),\n      children: range(10).map(newPerson)\n    };\n  });\n}\n\nexport const Logo = () =>\n  <div style={{ margin: '1rem auto', display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center'}}>\n    For more examples, visit {''}\n  <br />\n    <a href=\"https://github.com/react-tools/react-table\" target=\"_blank\">\n      <img\n        src=\"https://github.com/react-tools/media/raw/master/logo-react-table.png\"\n        style={{ width: `150px`, margin: \".5em auto .3em\" }}\n      />\n    </a>\n  </div>;\n\nexport const Tips = () =>\n  <div style={{ textAlign: \"center\" }}>\n    <em>Tip: Hold shift when sorting to multi-sort!</em>\n  </div>;\n  expo"]},"metadata":{},"sourceType":"module"}